From: "Barak A. Pearlmutter" <barak+git@pearlmutter.net>
Date: Tue, 19 Jul 2016 14:55:03 +0200
Subject: spelling

occured -> occurred
colum -> column
Distrubution -> Distribution
carefull -> careful
---
 Core/parser.cpp                                    |  2 +-
 MLDemos/visualization.ui                           |  2 +-
 _3rdParty/JnS/JnS.cpp                              |  2 +-
 _3rdParty/dlib/base64/base64_kernel_1.cpp          | 16 ++++++-------
 _3rdParty/dlib/bit_stream/bit_stream_kernel_1.cpp  |  2 +-
 .../entropy_encoder/entropy_encoder_kernel_1.cpp   | 12 +++++-----
 .../entropy_encoder/entropy_encoder_kernel_2.cpp   | 10 ++++----
 _3rdParty/dlib/svm/rvm.h                           | 24 +++++++++----------
 _3rdParty/lwpr/lwpr.hh                             |  2 +-
 _3rdParty/lwpr/lwpr_binio.h                        | 28 +++++++++++-----------
 _3rdParty/lwpr/lwpr_xml.h                          |  2 +-
 _3rdParty/matio/matio.h                            |  2 +-
 _3rdParty/nlopt/DIRect.c                           | 18 +++++++-------
 _AlgorithmsPlugins/DBSCAN/paramsDBSCAN.ui          |  2 +-
 _AlgorithmsPlugins/GHSOM/GHSOM/neuronlayer.cpp     |  2 +-
 _IOPlugins/ImportTimeseries/parser.cpp             |  2 +-
 _IOPlugins/WebImport/parser.cpp                    |  2 +-
 17 files changed, 65 insertions(+), 65 deletions(-)

diff --git a/Core/parser.cpp b/Core/parser.cpp
index 094e91b..85a32ca 100644
--- a/Core/parser.cpp
+++ b/Core/parser.cpp
@@ -327,7 +327,7 @@ void CSVParser::cleanData(unsigned int acceptedTypes)
         if (!(dataTypes[i]&acceptedTypes) &&  // data type does not correspond to a requested one
            (i != outputLabelColumn))       // output labels are stored separately, ignore
         {
-            cout << "Removing colum " << i << " of type " << dataTypes[i] <<  " ... ";
+            cout << "Removing column " << i << " of type " << dataTypes[i] <<  " ... ";
             for(size_t j = 0; j < data.size(); j++)
             {
                 /* @note it seems that if we have --i instead of (i-1), the compiler produces bad code (SIGSEGV) */
diff --git a/MLDemos/visualization.ui b/MLDemos/visualization.ui
index bafb20f..2db5923 100644
--- a/MLDemos/visualization.ui
+++ b/MLDemos/visualization.ui
@@ -122,7 +122,7 @@
            </item>
            <item>
             <property name="text">
-             <string>Distrubution: Density</string>
+             <string>Distribution: Density</string>
             </property>
            </item>
           </widget>
diff --git a/_3rdParty/JnS/JnS.cpp b/_3rdParty/JnS/JnS.cpp
index ab4af50..5cf925b 100644
--- a/_3rdParty/JnS/JnS.cpp
+++ b/_3rdParty/JnS/JnS.cpp
@@ -126,7 +126,7 @@ void Transform (double *X, double *Trans, int n, int T)
       Xstart = t * n ;
       Xstop  = Xstart + n ;
 
-      /* stores in Tx the t-th colum of X transformed by Trans */
+      /* stores in Tx the t-th column of X transformed by Trans */
       for (i=0; i<n ; i++) {
 	sum = 0.0 ;
 	for (s=i, Xind=Xstart; Xind<Xstop; s+=n, Xind++)
diff --git a/_3rdParty/dlib/base64/base64_kernel_1.cpp b/_3rdParty/dlib/base64/base64_kernel_1.cpp
index 06cae3d..5b48c78 100644
--- a/_3rdParty/dlib/base64/base64_kernel_1.cpp
+++ b/_3rdParty/dlib/base64/base64_kernel_1.cpp
@@ -190,20 +190,20 @@ namespace dlib
                     case CR:
                         ch = '\r';
                         if (out.sputn(&ch,1)!=1)
-                            throw std::ios_base::failure("error occured in the base64 object");
+                            throw std::ios_base::failure("error occurred in the base64 object");
                         break;
                     case LF:
                         ch = '\n';
                         if (out.sputn(&ch,1)!=1)
-                            throw std::ios_base::failure("error occured in the base64 object");
+                            throw std::ios_base::failure("error occurred in the base64 object");
                         break;
                     case CRLF:
                         ch = '\r';
                         if (out.sputn(&ch,1)!=1)
-                            throw std::ios_base::failure("error occured in the base64 object");
+                            throw std::ios_base::failure("error occurred in the base64 object");
                         ch = '\n';
                         if (out.sputn(&ch,1)!=1)
-                            throw std::ios_base::failure("error occured in the base64 object");
+                            throw std::ios_base::failure("error occurred in the base64 object");
                         break;
                     default:
                         DLIB_CASSERT(false,"this should never happen");
@@ -235,7 +235,7 @@ namespace dlib
                 // write the encoded bytes to the output stream
                 if (out.sputn(reinterpret_cast<char*>(&outbuf),4)!=4)
                 {
-                    throw std::ios_base::failure("error occured in the base64 object");
+                    throw std::ios_base::failure("error occurred in the base64 object");
                 }
 
                 // get 3 more input bytes
@@ -265,7 +265,7 @@ namespace dlib
                 // write the encoded bytes to the output stream
                 if (out.sputn(reinterpret_cast<char*>(&outbuf),4)!=4)
                 {
-                    throw std::ios_base::failure("error occured in the base64 object");
+                    throw std::ios_base::failure("error occurred in the base64 object");
                 }
 
 
@@ -292,7 +292,7 @@ namespace dlib
                 // write the encoded bytes to the output stream
                 if (out.sputn(reinterpret_cast<char*>(&outbuf),4)!=4)
                 {
-                    throw std::ios_base::failure("error occured in the base64 object");
+                    throw std::ios_base::failure("error occurred in the base64 object");
                 }
 
                 break;
@@ -370,7 +370,7 @@ namespace dlib
                 // write the encoded bytes to the output stream
                 if (out.sputn(reinterpret_cast<char*>(&outbuf),outsize)!=outsize)
                 {
-                    throw std::ios_base::failure("error occured in the base64 object");
+                    throw std::ios_base::failure("error occurred in the base64 object");
                 }
             }
 
diff --git a/_3rdParty/dlib/bit_stream/bit_stream_kernel_1.cpp b/_3rdParty/dlib/bit_stream/bit_stream_kernel_1.cpp
index ad3d63e..f49db14 100644
--- a/_3rdParty/dlib/bit_stream/bit_stream_kernel_1.cpp
+++ b/_3rdParty/dlib/bit_stream/bit_stream_kernel_1.cpp
@@ -121,7 +121,7 @@ namespace dlib
             buffer <<= 8 - buffer_size;
             if (osp->rdbuf()->sputn(reinterpret_cast<char*>(&buffer),1) == 0)
             {
-                throw std::ios_base::failure("error occured in the bit_stream object");
+                throw std::ios_base::failure("error occurred in the bit_stream object");
             }
 
             buffer_size = 0;
diff --git a/_3rdParty/dlib/entropy_encoder/entropy_encoder_kernel_1.cpp b/_3rdParty/dlib/entropy_encoder/entropy_encoder_kernel_1.cpp
index 028609d..effcf31 100644
--- a/_3rdParty/dlib/entropy_encoder/entropy_encoder_kernel_1.cpp
+++ b/_3rdParty/dlib/entropy_encoder/entropy_encoder_kernel_1.cpp
@@ -127,7 +127,7 @@ namespace dlib
                 {
                     if (streambuf->sputn(reinterpret_cast<char*>(&buf),1)==0)
                     {
-                        throw std::ios_base::failure("error occured in the entropy_encoder object");
+                        throw std::ios_base::failure("error occurred in the entropy_encoder object");
                     }
                     buf = 0;
                     buf_used = 0;
@@ -189,26 +189,26 @@ namespace dlib
         }
 
         if (streambuf->sputn(reinterpret_cast<char*>(&buf),1) == 0)
-            throw std::ios_base::failure("error occured in the entropy_encoder object");
+            throw std::ios_base::failure("error occurred in the entropy_encoder object");
 
 
 
         buf = static_cast<unsigned char>((low >> 24)&0xFF);
         if (streambuf->sputn(reinterpret_cast<char*>(&buf),1) == 0)
-            throw std::ios_base::failure("error occured in the entropy_encoder object");
+            throw std::ios_base::failure("error occurred in the entropy_encoder object");
 
 
 
 
         buf = static_cast<unsigned char>((low >> 16)&0xFF);
         if (streambuf->sputn(reinterpret_cast<char*>(&buf),1)==0)
-            throw std::ios_base::failure("error occured in the entropy_encoder object");
+            throw std::ios_base::failure("error occurred in the entropy_encoder object");
 
 
 
         buf = static_cast<unsigned char>((low >> 8)&0xFF);
         if (streambuf->sputn(reinterpret_cast<char*>(&buf),1)==0)
-            throw std::ios_base::failure("error occured in the entropy_encoder object");
+            throw std::ios_base::failure("error occurred in the entropy_encoder object");
 
 
 
@@ -216,7 +216,7 @@ namespace dlib
         {
             buf = static_cast<unsigned char>((low)&0xFF);
             if (streambuf->sputn(reinterpret_cast<char*>(&buf),1)==0)
-                throw std::ios_base::failure("error occured in the entropy_encoder object");
+                throw std::ios_base::failure("error occurred in the entropy_encoder object");
         }
     
 
diff --git a/_3rdParty/dlib/entropy_encoder/entropy_encoder_kernel_2.cpp b/_3rdParty/dlib/entropy_encoder/entropy_encoder_kernel_2.cpp
index d88030f..4f64a61 100644
--- a/_3rdParty/dlib/entropy_encoder/entropy_encoder_kernel_2.cpp
+++ b/_3rdParty/dlib/entropy_encoder/entropy_encoder_kernel_2.cpp
@@ -170,7 +170,7 @@ namespace dlib
                 // write buf to the output stream
                 if (streambuf->sputn(reinterpret_cast<char*>(&buf),1)==0)
                 {
-                    throw std::ios_base::failure("error occured in the entropy_encoder object");
+                    throw std::ios_base::failure("error occurred in the entropy_encoder object");
                 }                   
                 
             } 
@@ -194,25 +194,25 @@ namespace dlib
 
         buf = static_cast<unsigned char>((low >> 24)&0xFF);
         if (streambuf->sputn(reinterpret_cast<char*>(&buf),1) == 0)
-            throw std::ios_base::failure("error occured in the entropy_encoder object");
+            throw std::ios_base::failure("error occurred in the entropy_encoder object");
 
 
 
 
         buf = static_cast<unsigned char>((low >> 16)&0xFF);
         if (streambuf->sputn(reinterpret_cast<char*>(&buf),1)==0)
-            throw std::ios_base::failure("error occured in the entropy_encoder object");
+            throw std::ios_base::failure("error occurred in the entropy_encoder object");
 
 
 
         buf = static_cast<unsigned char>((low >> 8)&0xFF);
         if (streambuf->sputn(reinterpret_cast<char*>(&buf),1)==0)
-            throw std::ios_base::failure("error occured in the entropy_encoder object");
+            throw std::ios_base::failure("error occurred in the entropy_encoder object");
 
 
         buf = static_cast<unsigned char>((low)&0xFF);
         if (streambuf->sputn(reinterpret_cast<char*>(&buf),1)==0)
-            throw std::ios_base::failure("error occured in the entropy_encoder object");
+            throw std::ios_base::failure("error occurred in the entropy_encoder object");
         
     
 
diff --git a/_3rdParty/dlib/svm/rvm.h b/_3rdParty/dlib/svm/rvm.h
index 0acd475..f41ccd8 100644
--- a/_3rdParty/dlib/svm/rvm.h
+++ b/_3rdParty/dlib/svm/rvm.h
@@ -247,7 +247,7 @@ namespace dlib
                     - alpha(active_bases(i)) == the alpha value associated with sample x(i)
                     - weights(active_bases(i)) == the weight value associated with sample x(i)
                     - colm(phi, active_bases(i)) == the column of phi associated with sample x(i)
-                    - colm(phi, active_bases(i)) == kernel column i (from get_kernel_colum()) 
+                    - colm(phi, active_bases(i)) == kernel column i (from get_kernel_column()) 
                 - else
                     - the i'th sample isn't in the model and notionally has an alpha of infinity and
                       a weight of 0.
@@ -262,7 +262,7 @@ namespace dlib
             // set the initial values of these guys
             set_all_elements(active_bases, -1);
             long first_basis = pick_initial_vector(x,t);
-            get_kernel_colum(first_basis, x, K_col);
+            get_kernel_column(first_basis, x, K_col);
             active_bases(first_basis) = 0;
             set_colm(phi,0) = K_col;
             alpha(0) = compute_initial_alpha(phi, t);
@@ -384,7 +384,7 @@ namespace dlib
                     if (active_bases(i) != -1)
                         K_col = colm(phi,active_bases(i));
                     else
-                        get_kernel_colum(i, x, K_col);
+                        get_kernel_column(i, x, K_col);
 
                     // tempv2 = trans(phi_m)*B
                     tempv2 = scale_columns(trans(K_col), beta);  
@@ -476,7 +476,7 @@ namespace dlib
                         // update phi by adding the new sample's kernel matrix column in as one of phi's columns
                         tempm.set_size(phi.nr(), phi.nc()+1);
                         set_subm(tempm, get_rect(phi)) = phi;
-                        get_kernel_colum(selected_idx, x, K_col);
+                        get_kernel_column(selected_idx, x, K_col);
                         set_colm(tempm, phi.nc()) = K_col;
                         tempm.swap(phi);
 
@@ -523,7 +523,7 @@ namespace dlib
             // find the row in the kernel matrix that has the biggest normalized projection onto the t vector
             for (long r = 0; r < x.nr(); ++r)
             {
-                get_kernel_colum(r,x,K_col);
+                get_kernel_column(r,x,K_col);
                 double temp = trans(K_col)*t;
                 temp = temp*temp/length_squared(K_col);
 
@@ -540,7 +540,7 @@ namespace dlib
     // ------------------------------------------------------------------------------------
 
         template <typename T>
-        void get_kernel_colum (
+        void get_kernel_column (
             long idx,
             const T& x,
             scalar_vector_type& col
@@ -708,7 +708,7 @@ namespace dlib
                     - alpha(active_bases(i)) == the alpha value associated with sample x(i)
                     - weights(active_bases(i)) == the weight value associated with sample x(i)
                     - colm(phi, active_bases(i)) == the column of phi associated with sample x(i)
-                    - colm(phi, active_bases(i)) == kernel column i (from get_kernel_colum()) 
+                    - colm(phi, active_bases(i)) == kernel column i (from get_kernel_column()) 
                 - else
                     - the i'th sample isn't in the model and notionally has an alpha of infinity and
                       a weight of 0.
@@ -724,7 +724,7 @@ namespace dlib
             // set the initial values of these guys
             set_all_elements(active_bases, -1);
             long first_basis = pick_initial_vector(x,t);
-            get_kernel_colum(first_basis, x, K_col);
+            get_kernel_column(first_basis, x, K_col);
             active_bases(first_basis) = 0;
             set_colm(phi,0) = K_col;
             alpha(0) = compute_initial_alpha(phi, t, var);
@@ -793,7 +793,7 @@ namespace dlib
                     if (active_bases(i) != -1)
                         K_col = colm(phi,active_bases(i));
                     else
-                        get_kernel_colum(i, x, K_col);
+                        get_kernel_column(i, x, K_col);
 
                     // tempv2 = trans(phi_m)*B
                     tempv2 = trans(K_col)/var;  
@@ -882,7 +882,7 @@ namespace dlib
                         // update phi by adding the new sample's kernel matrix column in as one of phi's columns
                         tempm.set_size(phi.nr(), phi.nc()+1);
                         set_subm(tempm, get_rect(phi)) = phi;
-                        get_kernel_colum(selected_idx, x, K_col);
+                        get_kernel_column(selected_idx, x, K_col);
                         set_colm(tempm, phi.nc()) = K_col;
                         tempm.swap(phi);
 
@@ -916,7 +916,7 @@ namespace dlib
     // ------------------------------------------------------------------------------------
 
         template <typename T>
-        void get_kernel_colum (
+        void get_kernel_column (
             long idx,
             const T& x,
             scalar_vector_type& col
@@ -958,7 +958,7 @@ namespace dlib
             // find the row in the kernel matrix that has the biggest normalized projection onto the t vector
             for (long r = 0; r < x.nr(); ++r)
             {
-                get_kernel_colum(r,x,K_col);
+                get_kernel_column(r,x,K_col);
                 double temp = trans(K_col)*t;
                 temp = temp*temp/length_squared(K_col);
 
diff --git a/_3rdParty/lwpr/lwpr.hh b/_3rdParty/lwpr/lwpr.hh
index dafb2f0..55d6f01 100644
--- a/_3rdParty/lwpr/lwpr.hh
+++ b/_3rdParty/lwpr/lwpr.hh
@@ -56,7 +56,7 @@ class LWPR_Exception {
       BAD_OUTPUT_DIM,   /**< \brief Thrown when an argument should have matched the output dimension of the LWPR model, but did not */
       BAD_INIT_D,       /**< \brief Thrown when the desired initial distance metric is not positive definite */
       UNKNOWN_KERNEL,   /**< \brief Thrown when the name of an unknown kernel function has been passed */
-      IO_ERROR,         /**< \brief Thrown when errors occured during reading from or writing to files */
+      IO_ERROR,         /**< \brief Thrown when errors occurred during reading from or writing to files */
       OUT_OF_RANGE,     /**< \brief Thrown when an out-of-range index was passed */
       UNSPECIFIED_ERROR /**< \brief Thrown in any other error case (should not happen) */
    } Code;
diff --git a/_3rdParty/lwpr/lwpr_binio.h b/_3rdParty/lwpr/lwpr_binio.h
index 4500b52..a6335f8 100644
--- a/_3rdParty/lwpr/lwpr_binio.h
+++ b/_3rdParty/lwpr/lwpr_binio.h
@@ -129,7 +129,7 @@ extern "C" {
    \param[in] model    Pointer to a valid LWPR model structure
    \param[in] filename The name of the file
    \return
-      - 0 if errors have occured
+      - 0 if errors have occurred
       - 1 on success
    \ingroup LWPR_C    
 */
@@ -140,7 +140,7 @@ int lwpr_write_binary(const LWPR_Model *model, const char *filename);
    \param[in,out] model Pointer to a valid LWPR model structure
    \param[in] filename  Name of the file to read the model from
    \return
-      - 0 if errors have occured
+      - 0 if errors have occurred
       - 1 on success
    \ingroup LWPR_C    
 */
@@ -151,7 +151,7 @@ int lwpr_read_binary(LWPR_Model *model, const char *filename);
    \param[in] model    Pointer to a valid LWPR model structure
    \param[in] fp       Descriptor of an already opened file (see stdio.h)
    \return
-      - 0 if errors have occured
+      - 0 if errors have occurred
       - 1 on success
    \ingroup LWPR_C    
 */
@@ -161,7 +161,7 @@ int lwpr_write_binary_fp(const LWPR_Model *model, FILE *fp);
    \param[in,out] model Pointer to a valid LWPR model structure
    \param[in] fp        Descriptor of an already opened file (see stdio.h)
    \return
-      - 0 if errors have occured
+      - 0 if errors have occurred
       - 1 on success
    \ingroup LWPR_C    
 */
@@ -175,7 +175,7 @@ int lwpr_read_binary_fp(LWPR_Model *model, FILE *fp);
    \param[in] N        Number of columns
    \param[in] data     Pointer to matrix elements
    \return
-      - 0 if errors have occured
+      - 0 if errors have occurred
       - 1 on success
 */
 int lwpr_io_write_matrix(FILE *fp,int M, int Ms, int N, const double *data);
@@ -187,7 +187,7 @@ int lwpr_io_write_matrix(FILE *fp,int M, int Ms, int N, const double *data);
    \param[in] N        Number of columns
    \param[out] data    Pointer to matrix elements
    \return
-      - 0 if errors have occured
+      - 0 if errors have occurred
       - 1 on success
 */
 int lwpr_io_read_matrix(FILE *fp, int M, int Ms, int N, double *data);
@@ -197,7 +197,7 @@ int lwpr_io_read_matrix(FILE *fp, int M, int Ms, int N, double *data);
    \param[in] N        Number of elements
    \param[in] data     Pointer to vector elements
    \return
-      - 0 if errors have occured
+      - 0 if errors have occurred
       - 1 on success
 */
 int lwpr_io_write_vector(FILE *fp, int N, const double *data);
@@ -207,7 +207,7 @@ int lwpr_io_write_vector(FILE *fp, int N, const double *data);
    \param[in] N        Number of elements
    \param[out] data     Pointer to vector elements
    \return
-      - 0 if errors have occured
+      - 0 if errors have occurred
       - 1 on success
 */
 int lwpr_io_read_vector(FILE *fp, int N, double *data);
@@ -216,7 +216,7 @@ int lwpr_io_read_vector(FILE *fp, int N, double *data);
    \param[in] fp       File descriptor
    \param[in] data     Scalar value
    \return
-      - 0 if errors have occured
+      - 0 if errors have occurred
       - 1 on success
 */
 int lwpr_io_write_scalar(FILE *fp, double data);
@@ -225,7 +225,7 @@ int lwpr_io_write_scalar(FILE *fp, double data);
    \param[in] fp       File descriptor
    \param[out] data    Pointer to scalar value
    \return
-      - 0 if errors have occured
+      - 0 if errors have occurred
       - 1 on success
 */
 int lwpr_io_read_scalar(FILE *fp, double *data);
@@ -234,7 +234,7 @@ int lwpr_io_read_scalar(FILE *fp, double *data);
    \param[in] fp       File descriptor
    \param[in] data     Integer value
    \return
-      - 0 if errors have occured
+      - 0 if errors have occurred
       - 1 on success
 */
 int lwpr_io_write_int(FILE *fp, int data);
@@ -243,7 +243,7 @@ int lwpr_io_write_int(FILE *fp, int data);
    \param[in] fp      File descriptor
    \param[out] data    Pointer to integer
    \return
-      - 0 if errors have occured
+      - 0 if errors have occurred
       - 1 on success
 */
 int lwpr_io_read_int(FILE *fp, int *data);
@@ -252,7 +252,7 @@ int lwpr_io_read_int(FILE *fp, int *data);
    \param[in] fp     File descriptor
    \param[in] RF     Pointer to a receptive field structure
    \return
-      - 0 if errors have occured
+      - 0 if errors have occurred
       - 1 on success
 */
 int lwpr_io_write_rf(FILE *fp, const LWPR_ReceptiveField *RF);
@@ -262,7 +262,7 @@ int lwpr_io_write_rf(FILE *fp, const LWPR_ReceptiveField *RF);
    \param[in,out] sub Pointer to the current LWPR_SubModel, to which a new LWPR_ReceptiveField structure
                       will be added.
    \return
-      - 0 if errors have occured
+      - 0 if errors have occurred
       - 1 on success
 */
 int lwpr_io_read_rf(FILE *fp, LWPR_SubModel *sub);
diff --git a/_3rdParty/lwpr/lwpr_xml.h b/_3rdParty/lwpr/lwpr_xml.h
index 2cf1830..57972d8 100644
--- a/_3rdParty/lwpr/lwpr_xml.h
+++ b/_3rdParty/lwpr/lwpr_xml.h
@@ -177,7 +177,7 @@ void lwpr_xml_error(LWPR_ParserData *ud, const char *msg);
 
 /** \brief Auxiliary routine to report a "bad dimensionality" parsing error 
    \param[in] ud  Pointer to parser data structure (including LWPR model etc.)
-   \param[in] fieldname    Name of variable where error occured
+   \param[in] fieldname    Name of variable where error occurred
    \param[in] wishM        Number of desired rows, or 1 in case of scalars / vectors
    \param[in] wishN        Number of desired columns, or elements in case of vectors
 */
diff --git a/_3rdParty/matio/matio.h b/_3rdParty/matio/matio.h
index 8b9d76f..e20fb41 100644
--- a/_3rdParty/matio/matio.h
+++ b/_3rdParty/matio/matio.h
@@ -211,7 +211,7 @@ typedef struct mat_sparse_t {
                                *  data[k].  0 <= k <= nzmax
                                */
     int nir;                 /**< number of elements in ir */
-    int *jc;                 /**< Array size N+1 (N is number of columsn) with
+    int *jc;                 /**< Array size N+1 (N is number of columns) with
                                *  jc[k] being the index into ir/data of the
                                *  first non-zero element for row k.
                                */
diff --git a/_3rdParty/nlopt/DIRect.c b/_3rdParty/nlopt/DIRect.c
index c84a0a7..f3ebc9d 100644
--- a/_3rdParty/nlopt/DIRect.c
+++ b/_3rdParty/nlopt/DIRect.c
@@ -162,7 +162,7 @@
 /* |            for the function within the hyper-box.                     | */
 /* |                                                                       | */
 /* |    minf -- The value of the function at x.                            | */
-/* |  Ierror -- Error flag. If Ierror is lower 0, an error has occured. The| */
+/* |  Ierror -- Error flag. If Ierror is lower 0, an error has occurred. The| */
 /* |            values of Ierror mean                                      | */
 /* |            Fatal errors :                                             | */
 /* |             -1   u(i) <= l(i) for some i.                             | */
@@ -170,9 +170,9 @@
 /* |             -3   Initialization in DIRpreprc failed.                  | */
 /* |             -4   Error in DIRSamplepoints, that is there was an error | */
 /* |                  in the creation of the sample points.                | */
-/* |             -5   Error in DIRSamplef, that is an error occured while  | */
+/* |             -5   Error in DIRSamplef, that is an error occurred while  | */
 /* |                  the function was sampled.                            | */
-/* |             -6   Error in DIRDoubleInsert, that is an error occured   | */
+/* |             -6   Error in DIRDoubleInsert, that is an error occurred   | */
 /* |                  DIRECT tried to add all hyperrectangles with the same| */
 /* |                  size and function value at the center. Either        | */
 /* |                  increase maxdiv or use our modification (Jones = 1). | */
@@ -355,7 +355,7 @@
 	    algmethod, &MAXFUNC, &MAXDEEP, fglobal, fglper, ierror, &epsfix, &
 		      iepschange, volper, sigmaper);
 /* +-----------------------------------------------------------------------+ */
-/* | If an error has occured while writing the header (we do some checking | */
+/* | If an error has occurred while writing the header (we do some checking | */
 /* | of variables there), return to the main program.                      | */
 /* +-----------------------------------------------------------------------+ */
     if (*ierror < 0) {
@@ -383,7 +383,7 @@
     direct_dirinitlist_(anchor, &ifree, point, f, &MAXFUNC, &MAXDEEP);
 /* +-----------------------------------------------------------------------+ */
 /* | Call the routine to initialise the mapping of x from the n-dimensional| */
-/* | unit cube to the hypercube given by u and l. If an error occured,     | */
+/* | unit cube to the hypercube given by u and l. If an error occurred,     | */
 /* | give out a error message and return to the main program with the error| */
 /* | flag set.                                                             | */
 /* | JG 07/16/01 Changed call to remove unused data.                       | */
@@ -413,12 +413,12 @@
     if (*ierror < 0) {
 	if (*ierror == -4) {
 	    if (logfile)
-		 fprintf(logfile, "WARNING: Error occured in routine DIRsamplepoints.\n");
+		 fprintf(logfile, "WARNING: Error occurred in routine DIRsamplepoints.\n");
 	    goto cleanup;
 	}
 	if (*ierror == -5) {
 	    if (logfile)
-		 fprintf(logfile, "WARNING: Error occured in routine DIRsamplef..\n");
+		 fprintf(logfile, "WARNING: Error occurred in routine DIRsamplef..\n");
 	    goto cleanup;
 	}
 	if (*ierror == -102) goto L100;
@@ -535,7 +535,7 @@
 			MAXDEEP, &oops);
 		if (oops > 0) {
 		    if (logfile)
-			 fprintf(logfile, "WARNING: Error occured in routine DIRsamplepoints.\n");
+			 fprintf(logfile, "WARNING: Error occurred in routine DIRsamplepoints.\n");
 		    *ierror = -4;
 		    goto cleanup;
 		}
@@ -558,7 +558,7 @@
 		}
 		if (oops > 0) {
 		    if (logfile)
-			 fprintf(logfile, "WARNING: Error occured in routine DIRsamplef.\n");
+			 fprintf(logfile, "WARNING: Error occurred in routine DIRsamplef.\n");
 		    *ierror = -5;
 		    goto cleanup;
 		}
diff --git a/_AlgorithmsPlugins/DBSCAN/paramsDBSCAN.ui b/_AlgorithmsPlugins/DBSCAN/paramsDBSCAN.ui
index 7e4bad4..d45e00b 100644
--- a/_AlgorithmsPlugins/DBSCAN/paramsDBSCAN.ui
+++ b/_AlgorithmsPlugins/DBSCAN/paramsDBSCAN.ui
@@ -49,7 +49,7 @@
     </font>
    </property>
    <property name="toolTip">
-    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Metric used for the distance between points. Be carefull to also adapt the other parameters.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
+    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Metric used for the distance between points. Be careful to also adapt the other parameters.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
    </property>
    <property name="currentIndex">
     <number>0</number>
diff --git a/_AlgorithmsPlugins/GHSOM/GHSOM/neuronlayer.cpp b/_AlgorithmsPlugins/GHSOM/GHSOM/neuronlayer.cpp
index 6fc71db..2ce5c7a 100644
--- a/_AlgorithmsPlugins/GHSOM/GHSOM/neuronlayer.cpp
+++ b/_AlgorithmsPlugins/GHSOM/GHSOM/neuronlayer.cpp
@@ -707,7 +707,7 @@ void NeuronLayer::saveAsSOMLib(){
     //struct tm *now = (struct tm*)malloc(sizeof(struct tm));
     time_t now = time(NULL);
     mapFile.precision(10);
-    mapFile << "#SOM Map Decription File\n#created by ghsom " << VERSION << " (Growing Hierarchical Self-Organizing Map)\n#Michael Dittenbach\n#\n";
+    mapFile << "#SOM Map Description File\n#created by ghsom " << VERSION << " (Growing Hierarchical Self-Organizing Map)\n#Michael Dittenbach\n#\n";
     mapFile << "$TYPE rect\n";
     mapFile << "$XDIM " << x << "\n";
     mapFile << "$YDIM " << y << "\n";
diff --git a/_IOPlugins/ImportTimeseries/parser.cpp b/_IOPlugins/ImportTimeseries/parser.cpp
index 29c28da..e40eb66 100644
--- a/_IOPlugins/ImportTimeseries/parser.cpp
+++ b/_IOPlugins/ImportTimeseries/parser.cpp
@@ -181,7 +181,7 @@ void CSVParser::cleanData(unsigned int acceptedTypes)
     for(size_t i = 0; i < inputTypes.size() - 1; i++)
         if (!(inputTypes[i]&acceptedTypes)) // data type does not correspond to a requested one
         {
-            std::cout << "Removing colum " << i << " of type " << inputTypes[i] <<  " ... ";
+            std::cout << "Removing column " << i << " of type " << inputTypes[i] <<  " ... ";
             for(size_t j = 0; j < data.size(); j++)
             {
                 it = data.at(j).begin() + i;
diff --git a/_IOPlugins/WebImport/parser.cpp b/_IOPlugins/WebImport/parser.cpp
index 417c58a..0f6c450 100644
--- a/_IOPlugins/WebImport/parser.cpp
+++ b/_IOPlugins/WebImport/parser.cpp
@@ -267,7 +267,7 @@ void CSVParser::cleanData(unsigned int acceptedTypes)
         if (!(dataTypes[i]&acceptedTypes) &&  // data type does not correspond to a requested one
            (i != outputLabelColumn))       // output labels are stored separately, ignore
         {
-            cout << "Removing colum " << i << " of type " << dataTypes[i] <<  " ... ";
+            cout << "Removing column " << i << " of type " << dataTypes[i] <<  " ... ";
             for(size_t j = 0; j < data.size(); j++)
             {
                 /* @note it seems that if we have --i instead of (i-1), the compiler produces bad code (SIGSEGV) */
